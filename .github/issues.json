[
  {
    "service": "Auth Service",
    "issues": [
      {
        "task": "Register credentials (Step 2 - username/password)",
        "description": "Implement an endpoint for users to set up username and password with validation and uniqueness checks.",
        "labels": [
          "auth",
          "registration"
        ]
      },
      {
        "task": "Save hashed password",
        "description": "Hash passwords using bcrypt or a secure algorithm before saving to DB.",
        "labels": [
          "auth",
          "security"
        ]
      },
      {
        "task": "Set security questions & answers",
        "description": "Allow users to setup security questions and answers for identity verification.",
        "labels": [
          "auth",
          "security"
        ]
      },
      {
        "task": "Login endpoint",
        "description": "Authenticate users with username and password, return JWT on success.",
        "labels": [
          "auth",
          "login"
        ]
      },
      {
        "task": "Track failed login attempts",
        "description": "Record and monitor failed login attempts for security and lockout policies.",
        "labels": [
          "auth",
          "security"
        ]
      },
      {
        "task": "Lock account after 5 failed attempts",
        "description": "Temporarily lock user accounts after repeated failed login attempts to prevent brute force.",
        "labels": [
          "auth",
          "security"
        ]
      },
      {
        "task": "JWT generation via Keycloak",
        "description": "Leverage Keycloak to issue and validate JWT tokens for authenticated sessions.",
        "labels": [
          "auth",
          "security",
          "keycloak"
        ]
      },
      {
        "task": "Logout endpoint",
        "description": "End user sessions by invalidating tokens or clearing sessions.",
        "labels": [
          "auth",
          "logout"
        ]
      },
      {
        "task": "Password reset (via token/email)",
        "description": "Allow users to reset their password via a secure token sent by email.",
        "labels": [
          "auth",
          "security",
          "reset"
        ]
      },
      {
        "task": "Change password",
        "description": "Secure route for users to change their password with current credentials validation.",
        "labels": [
          "auth",
          "security"
        ]
      }
    ]
  }
]
